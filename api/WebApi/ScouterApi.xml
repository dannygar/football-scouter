<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ScouterApi</name>
    </assembly>
    <members>
        <member name="T:ScouterApi.Attributes.ValidateModelStateAttribute">
            <summary>
            Model state validation attribute
            </summary>
        </member>
        <member name="M:ScouterApi.Attributes.ValidateModelStateAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Called before the action method is invoked
            </summary>
            <param name="context">context</param>
        </member>
        <member name="T:ScouterApi.Configuration.AppSettings">
            <summary>
            Class AppSettings.
            </summary>
        </member>
        <member name="P:ScouterApi.Configuration.AppSettings.Logging">
            <summary>
            Gets or sets the logging.
            </summary>
            <value>The logging.</value>
        </member>
        <member name="P:ScouterApi.Configuration.AppSettings.ApplicationInsights">
            <summary>
            Gets or sets the application insights.
            </summary>
            <value>The application insights.</value>
        </member>
        <member name="P:ScouterApi.Configuration.AppSettings.CosmosDb">
            <summary>
            Gets or sets the cosmos database.
            </summary>
            <value>The cosmos database.</value>
        </member>
        <member name="P:ScouterApi.Configuration.AppSettings.AzureAD">
            <summary>
            Gets or sets the Azure AD app details.
            </summary>
            <value>The Azure AD settings for the application.</value>
        </member>
        <member name="M:ScouterApi.Configuration.AppSettings.GetConfiguration(System.String)">
            <summary>
            Gets the configuration.
            </summary>
            <param name="dir">The dir.</param>
            <returns>IConfigurationRoot.</returns>
        </member>
        <member name="M:ScouterApi.Configuration.AppSettings.GetConfiguration(System.String,System.String)">
            <summary>
            Gets the configuration.
            </summary>
            <param name="dir">The dir.</param>
            <param name="environmentName">Name of the environment.</param>
            <returns>IConfigurationRoot.</returns>
        </member>
        <member name="M:ScouterApi.Configuration.AppSettings.GetSettings(System.String)">
            <summary>
            Gets the settings.
            </summary>
            <param name="dir">The dir.</param>
            <returns>AppSettings.</returns>
        </member>
        <member name="M:ScouterApi.Configuration.AppSettings.GetSettings(System.String,System.String)">
            <summary>
            Gets the settings.
            </summary>
            <param name="dir">The dir.</param>
            <param name="environmentName">Name of the environment.</param>
            <returns>AppSettings.</returns>
        </member>
        <member name="M:ScouterApi.Configuration.AppSettings.GetSettings(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Gets the settings.
            </summary>
            <param name="config">The configuration.</param>
            <returns>AppSettings.</returns>
        </member>
        <member name="T:ScouterApi.Configuration.AppSettings.LoggingSettings">
            <summary>
            Class LoggingSettings.
            </summary>
        </member>
        <member name="T:ScouterApi.Configuration.AppSettings.LoggingSettings.LogLevelSettings">
            <summary>
            Class LogLevelSettings.
            </summary>
        </member>
        <member name="P:ScouterApi.Configuration.AppSettings.LoggingSettings.LogLevelSettings.Default">
            <summary>
            Gets or sets the default.
            </summary>
            <value>The default.</value>
        </member>
        <member name="P:ScouterApi.Configuration.AppSettings.LoggingSettings.LogLevelSettings.Microsoft">
            <summary>
            Gets or sets the microsoft logs.
            </summary>
            <value>The microsoft.</value>
        </member>
        <member name="P:ScouterApi.Configuration.AppSettings.LoggingSettings.LogLevelSettings.System">
            <summary>
            Gets or sets the System logs.
            </summary>
            <value>The microsoft.</value>
        </member>
        <member name="T:ScouterApi.Configuration.AppSettings.ApplicationInsightsSettings">
            <summary>
            Class ApplicationInsightsSettings.
            </summary>
        </member>
        <member name="P:ScouterApi.Configuration.AppSettings.ApplicationInsightsSettings.InstrumentationKey">
            <summary>
            Gets or sets the instrumentation key.
            </summary>
            <value>The instrumentation key.</value>
        </member>
        <member name="P:ScouterApi.Configuration.AppSettings.ApplicationInsightsSettings.LogLevel">
            <summary>
            Gets or sets the log level.
            </summary>
            <value>The log level.</value>
        </member>
        <member name="T:ScouterApi.Configuration.AppSettings.CosmosDbSettings">
            <summary>
            Class CosmosDbSettings.
            </summary>
        </member>
        <member name="P:ScouterApi.Configuration.AppSettings.CosmosDbSettings.ConnectionString">
            <summary>
            Gets or sets the Cosmos DB Connection string.
            </summary>
            <value>The endpoint URL.</value>
        </member>
        <member name="P:ScouterApi.Configuration.AppSettings.CosmosDbSettings.DatabaseName">
            <summary>
            Gets or sets the name of the database.
            </summary>
            <value>The name of the database.</value>
        </member>
        <member name="T:ScouterApi.Configuration.AppSettings.AzureADSettings">
            <summary>
            Class AzureAD Settings.
            </summary>
        </member>
        <member name="P:ScouterApi.Configuration.AppSettings.AzureADSettings.TenantId">
            <summary>
            Gets or sets the Tenant ID for the Azure AD app registration.
            </summary>
            <value>The tenant id.</value>
        </member>
        <member name="P:ScouterApi.Configuration.AppSettings.AzureADSettings.AppId">
            <summary>
            Gets or sets the App ID for the Azure AD app registration.
            </summary>
            <value>The app id.</value>
        </member>
        <member name="P:ScouterApi.Configuration.AppSettings.AzureADSettings.AppPassword">
            <summary>
            Gets or sets the App AppSecret/Secret for the Azure AD app registration.
            </summary>
            <value>The app password.</value>
        </member>
        <member name="P:ScouterApi.Configuration.AppSettings.AzureADSettings.HostDomain">
            <summary>
            Gets or sets the Host Domain for the Azure AD app registration that is also the permission scope prefix.
            </summary>
            <value>The name of the host domain.</value>
        </member>
        <member name="P:ScouterApi.Configuration.AppSettings.AzureADSettings.Scope">
            <summary>
            Gets or sets the Scope Name for the Azure AD app registration.
            </summary>
            <value>The name of the scope.</value>
        </member>
        <member name="T:ScouterApi.Constants.HttpRouteConstants">
            <summary>
            HTTP route constants for routing requests to CallController methods.
            </summary>
        </member>
        <member name="F:ScouterApi.Constants.HttpRouteConstants.EventsRoutePrefix">
            <summary>
            Route prefix for all incoming requests.
            </summary>
        </member>
        <member name="F:ScouterApi.Constants.HttpRouteConstants.AgentRoutePrefix">
            <summary>
            Route agent
            </summary>
        </member>
        <member name="F:ScouterApi.Constants.HttpRouteConstants.GameRoutePrefix">
            <summary>
            Route agent
            </summary>
        </member>
        <member name="F:ScouterApi.Constants.HttpRouteConstants.StatsRoutePrefix">
            <summary>
            Route agent
            </summary>
        </member>
        <member name="T:ScouterApi.Controllers.EventsController">
             <summary>
             Scouter Controller
             </summary>
            [Authorize]
        </member>
        <member name="M:ScouterApi.Controllers.EventsController.GetGameEventsAsync(System.String)">
            <summary>Gets the game's events.</summary>
            <param name="id"></param>
            <returns>scoreEvent&lt;EventModel&gt;.</returns>
        </member>
        <member name="M:ScouterApi.Controllers.EventsController.GetGameStatsAsync(ScouterApi.Models.GoldCircleModel)">
            <summary>Gets the game's stats.</summary>
            <param name="gameId"></param>
            <param name="agentKeys"></param>
            <returns>scoreEvent&lt;ConsensusModel&gt;.</returns>
        </member>
        <member name="M:ScouterApi.Controllers.EventsController.GetEventsByAccountAsync(System.String,System.String)">
            <summary>Gets the user's Scores for the specific game.</summary>
            <param name="id"></param>
            <param name="account"></param>
            <returns>scoreEvent&lt;EventModel&gt;.</returns>
        </member>
        <member name="M:ScouterApi.Controllers.EventsController.PostAsync(ScouterApi.Models.EventModel)">
            <summary>Posts the specified event.</summary>
            <param name="scoreEvent">The scoreEvent data.</param>
            <returns>Task&lt;System.Boolean&gt;.</returns>
        </member>
        <member name="T:ScouterApi.Controllers.GamesController">
             <summary>
             Scouter Controller
             </summary>
            [Authorize]
        </member>
        <member name="M:ScouterApi.Controllers.GamesController.PostAsync(System.Collections.Generic.IEnumerable{ScouterApi.Models.IGame})">
            <summary>Posts the specified event.</summary>
            <param name="games">The games collection.</param>
            <returns>Task&lt;System.Boolean&gt;.</returns>
        </member>
        <member name="T:ScouterApi.Controllers.Controllers.HomeController">
            <summary>
            Controller for home/default views
            </summary>
        </member>
        <member name="M:ScouterApi.Controllers.Controllers.HomeController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ScouterApi.Controllers.Controllers.HomeController"/> class.
            </summary>
        </member>
        <member name="M:ScouterApi.Controllers.Controllers.HomeController.Index">
            <summary>
            The default index view for the Home controller
            </summary>
            <returns>the view to render</returns>
        </member>
        <member name="M:ScouterApi.Controllers.Controllers.HomeController.Get">
            <summary>
            Get the default content of home page.
            </summary>
            <returns>Default content.</returns>
        </member>
        <member name="T:ScouterApi.Controllers.StatsController">
             <summary>
             Scouter Controller
             </summary>
            [Authorize]
        </member>
        <member name="M:ScouterApi.Controllers.StatsController.SaveGoldCirclePostAsync(ScouterApi.Models.GoldCircleModel)">
            <summary>Saves the Golden Circle.</summary>
            <param name="goldCircle">The Gold Circle collection.</param>
            <returns>Task&lt;System.Boolean&gt;.</returns>
        </member>
        <member name="M:ScouterApi.Controllers.StatsController.SaveConsensusPostAsync(ScouterApi.Models.EventModel)">
            <summary>Saves the Consensus Result.</summary>
            <param name="goldCircle">The Gold Circle collection.</param>
            <returns>Task&lt;System.Boolean&gt;.</returns>
        </member>
        <member name="T:ScouterApi.Mappings.MappingProfile">
            <summary>
            MappingProfile
            </summary>
        </member>
        <member name="M:ScouterApi.Mappings.MappingProfile.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="T:ScouterApi.Models.ConsensusModel">
            <summary>
            ConsensusModel
            </summary>
        </member>
        <member name="T:ScouterApi.Models.EventModel">
            <summary>
            Model that describes the Significant Event.
            </summary>
        </member>
        <member name="P:ScouterApi.Models.EventModel.Account">
            <summary>
            Gets or sets User's account.
            </summary>
        </member>
        <member name="P:ScouterApi.Models.EventModel.Email">
            <summary>
            Gets or sets User's email.
            </summary>
        </member>
        <member name="P:ScouterApi.Models.EventModel.GameId">
            <summary>
            Gets or sets Game Id.
            </summary>
        </member>
        <member name="P:ScouterApi.Models.EventModel.Events">
            <summary>
             Gets or sets the Events.
            </summary>
        </member>
        <member name="T:ScouterApi.Models.IGame">
            <summary>
             IGame model
            </summary>
        </member>
        <member name="P:ScouterApi.Models.GoldCircleModel.GameId">
            <summary>
            Gets or sets Game Id.
            </summary>
        </member>
        <member name="T:ScouterApi.Models.SignificantEvent">
            <summary>
            Model that describes the Significant Event.
            </summary>
        </member>
        <member name="P:ScouterApi.Models.SignificantEvent.Id">
            <summary>
            Gets or sets Event Id.
            </summary>
        </member>
        <member name="P:ScouterApi.Models.SignificantEvent.EventTime">
            <summary>
            Gets or sets EventTime
            </summary>
        </member>
        <member name="P:ScouterApi.Models.SignificantEvent.AdvTeam">
            <summary>
            Gets or sets AdvTeam
            </summary>
        </member>
        <member name="P:ScouterApi.Models.SignificantEvent.EventType">
            <summary>
            Gets or sets Event Type
            </summary>
        </member>
        <member name="P:ScouterApi.Models.SignificantEvent.Position">
            <summary>
            Gets or sets Position
            </summary>
        </member>
        <member name="P:ScouterApi.Models.SignificantEvent.Significance">
            <summary>
            Gets or sets Significance
            </summary>
        </member>
        <member name="P:ScouterApi.Models.SignificantEvent.Credit">
            <summary>
            Gets or sets Credit
            </summary>
        </member>
        <member name="P:ScouterApi.Models.SignificantEvent.Blame">
            <summary>
            Gets or sets Blame
            </summary>
        </member>
        <member name="P:ScouterApi.Models.SignificantEvent.Comments">
            <summary>
            Gets or sets Credit
            </summary>
        </member>
        <member name="T:ScouterApi.Processors.AgentProcessor">
            <summary>
            Agent Processor
            </summary>
        </member>
        <member name="M:ScouterApi.Processors.AgentProcessor.AddAgentAsync(ScouterApi.Models.AgentModel)">
            <summary>
            AddAgentAsync
            </summary>
            <param name="agent"></param>
            <returns></returns>
        </member>
        <member name="M:ScouterApi.Processors.AgentProcessor.GetAgent(System.Guid)">
            <summary>
            GetAgent
            </summary>
            <param name="agentId"></param>
            <returns></returns>
        </member>
        <member name="T:ScouterApi.Processors.ScoresProcessor">
            <summary>
            Agent Processor
            </summary>
        </member>
        <member name="M:ScouterApi.Processors.ScoresProcessor.ProcessScoresAsync(System.Collections.Generic.IEnumerable{Scouter.Data.EventModelDTO})">
            <summary>
            ProcessScoresAsync
            </summary>
            <param name="agentScores"></param>
            <returns></returns>
        </member>
        <member name="T:ScouterApi.Resolvers.ProcessedTimeResolver">
            <summary>
            ProcessedTimeResolver
            </summary>
        </member>
        <member name="M:ScouterApi.Resolvers.ProcessedTimeResolver.Resolve(ScouterApi.Models.SignificantEvent,Scouter.Data.SignificantEventDTO,System.Decimal,AutoMapper.ResolutionContext)">
            <summary>
            Resolve
            </summary>
            <param name="source"></param>
            <param name="destination"></param>
            <param name="destMember"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:ScouterApi.Services.ICosmosDbService`1">
            <summary>
            Interface ICosmosDbService.
            </summary>
            <typeparam name="T"> A model type.</typeparam>
        </member>
        <member name="M:ScouterApi.Services.ICosmosDbService`1.GetItemsAsync(System.String)">
            <summary>
            Gets the items asynchronous.
            </summary>
            <param name="queryString">The query string.</param>
            <returns>Task&lt;IEnumerable&lt;T&gt;&gt;.</returns>
        </member>
        <member name="M:ScouterApi.Services.ICosmosDbService`1.GetItemAsync(System.String,System.String)">
            <summary>
            Gets the item asynchronous.
            </summary>
            <param name="id">The identifier.</param>
            <param name="partitionKey">The partition key.</param>
            <returns>Task&lt;T&gt;.</returns>
        </member>
        <member name="M:ScouterApi.Services.ICosmosDbService`1.AddItemAsync(`0,System.String)">
            <summary>
            Adds the item asynchronous.
            </summary>
            <param name="item">The item.</param>
            <param name="partitionKey">The partition key.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:ScouterApi.Services.ICosmosDbService`1.UpsertItemAsync(`0,System.String)">
            <summary>
            Upserts the item asynchronous.
            </summary>
            <param name="item">The item.</param>
            <param name="partitionKey">The partition key.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:ScouterApi.Services.ICosmosDbService`1.DeleteItemAsync(System.String,System.String)">
            <summary>
            Deletes the item asynchronous.
            </summary>
            <param name="id">The identifier.</param>
            <param name="partitionKey">The partition key.</param>
            <returns>Task.</returns>
        </member>
        <member name="T:ScouterApi.Utils.CosmosUtil`1">
            <summary>
            Class CosmosUtil.
            Implements the <see cref="T:ScouterApi.Services.ICosmosDbService`1" />.
            </summary>
            <typeparam name="T">A model type.</typeparam>
            <seealso cref="T:ScouterApi.Services.ICosmosDbService`1" />
        </member>
        <member name="F:ScouterApi.Utils.CosmosUtil`1.DefaultPartitionKey">
            <summary>
            The default partition key.
            </summary>
        </member>
        <member name="F:ScouterApi.Utils.CosmosUtil`1.client">
            <summary>
            The client.
            </summary>
        </member>
        <member name="F:ScouterApi.Utils.CosmosUtil`1.database">
            <summary>
            The database.
            </summary>
        </member>
        <member name="F:ScouterApi.Utils.CosmosUtil`1.container">
            <summary>
            The container.
            </summary>
        </member>
        <member name="M:ScouterApi.Utils.CosmosUtil`1.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ScouterApi.Utils.CosmosUtil`1" /> class.
            </summary>
            <param name="containerName">Name of the container.</param>
            <param name="partitionKey">The partition key.</param>
            <param name="throughput">The throughput.</param>
        </member>
        <member name="M:ScouterApi.Utils.CosmosUtil`1.#ctor(System.String,ScouterApi.Configuration.AppSettings,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ScouterApi.Utils.CosmosUtil`1" /> class.
            </summary>
            <param name="containerName">Name of the container.</param>
            <param name="appSettings">The application settings.</param>
            <param name="partitionKey">The partition key.</param>
            <param name="throughput">The throughput.</param>
        </member>
        <member name="M:ScouterApi.Utils.CosmosUtil`1.GetItemsAsync(Microsoft.Azure.Cosmos.QueryDefinition,System.String)">
            <summary>
            get items as an asynchronous operation.
            </summary>
            <param name="queryDefinition">The query definition.</param>
            <param name="partitionKey"></param>
            <returns>IEnumerable&lt;T&gt;.</returns>
        </member>
        <member name="M:ScouterApi.Utils.CosmosUtil`1.GetItemsAsync(System.String)">
            <summary>
            get items as an asynchronous operation.
            </summary>
            <param name="queryString">The query string.</param>
            <returns>IEnumerable&lt;T&gt;.</returns>
        </member>
        <member name="M:ScouterApi.Utils.CosmosUtil`1.GetItemAsync(System.String,System.String)">
            <summary>
            get item as an asynchronous operation.
            </summary>
            <param name="id">The identifier.</param>
            <param name="partitionKey">The partition key.</param>
            <returns>T.</returns>
        </member>
        <member name="M:ScouterApi.Utils.CosmosUtil`1.AddItemAsync(`0,System.String)">
            <summary>
            add item as an asynchronous operation.
            </summary>
            <param name="item">The item.</param>
            <param name="partitionKey">The partition key.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:ScouterApi.Utils.CosmosUtil`1.ReplaceItemAsync(`0,System.String,System.String)">
            <summary>
            Replace item as an asynchronous operation.
            </summary>
            <param name="item">The item.</param>
            <param name="id"></param>
            <param name="partitionKey">The partition key.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:ScouterApi.Utils.CosmosUtil`1.UpsertItemAsync(`0,System.String)">
            <summary>
            upsert item as an asynchronous operation.
            </summary>
            <param name="item">The item.</param>
            <param name="partitionKey">The partition key.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:ScouterApi.Utils.CosmosUtil`1.UpsertArrayAsync(System.Collections.Generic.IList{`0},System.String)">
            <summary>
            Bulk Upsert Task execution
            </summary>
            <param name="items"></param>
            <param name="partitionKey"></param>
            <returns></returns>
        </member>
        <member name="M:ScouterApi.Utils.CosmosUtil`1.DeleteItemAsync(System.String,System.String)">
            <summary>
            delete item as an asynchronous operation.
            </summary>
            <param name="id">The identifier.</param>
            <param name="partitionKey">The partition key.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:ScouterApi.Utils.CosmosUtil`1.DeleteContainerAsync(System.String)">
            <summary>
            delete container as an asynchronous operation.
            </summary>
            <param name="containerName">Name of the container.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the work of deleting the container.</returns>
        </member>
        <member name="M:ScouterApi.Utils.CosmosUtil`1.DeleteDatabaseAsync">
            <summary>
            delete database as an asynchronous operation.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the work of deleting the database.</returns>
        </member>
        <member name="M:ScouterApi.Utils.CosmosUtil`1.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:ScouterApi.Utils.CosmosUtil`1.UpdateConnectionStrForCosmosEmulator(System.String,System.String)">
            <summary>
            Updates a cosmosdb connectionstr with a new endpoint address" /> class.
            </summary>
            <param name="appSettingsConnectionString">The connection str read from app settings.</param>
            <param name="cosmosEndPoint">The new cosmos db endpoint to update the connection str with.</param>
            <returns>string.</returns>
        </member>
        <member name="M:ScouterApi.Utils.CosmosUtil`1.CreateDatabase(System.String,ScouterApi.Configuration.AppSettings,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ScouterApi.Utils.CosmosUtil`1" /> class.
            </summary>
            <param name="containerName">Name of the container.</param>
            <param name="appSettings">The application settings.</param>
            <param name="partitionKey">The partition key.</param>
            <param name="throughput">The throughput.</param>
            <returns>System.Threading.Tasks.Task.</returns>
        </member>
        <member name="T:ScouterApi.Utils.LogUtil">
            <summary>
            Log class to publish logs/traces into application Insights.
            </summary>
        </member>
        <member name="M:ScouterApi.Utils.LogUtil.LogError(Microsoft.Extensions.Logging.ILogger,System.String,System.String)">
            <summary>
            Method to handle error messages.
            </summary>
            <param name="logger">logger.</param>
            <param name="messages">message.</param>
            <param name="module">module.</param>
        </member>
        <member name="M:ScouterApi.Utils.LogUtil.LogWarning(Microsoft.Extensions.Logging.ILogger,System.String,System.String)">
            <summary>
            Method to handle warning messages.
            </summary>
            <param name="logger">logger.</param>
            <param name="messages">message.</param>
            <param name="module">module.</param>
        </member>
        <member name="M:ScouterApi.Utils.LogUtil.LogInformation(Microsoft.Extensions.Logging.ILogger,System.String,System.String)">
            <summary>
            Method to handle information messages.
            </summary>
            <param name="logger">logger.</param>
            <param name="messages">message.</param>
            <param name="module">module.</param>
        </member>
        <member name="M:ScouterApi.Utils.LogUtil.LogCritical(Microsoft.Extensions.Logging.ILogger,System.String,System.String)">
            <summary>
            Method to handle critical messages.
            </summary>
            <param name="logger">logger.</param>
            <param name="messages">message.</param>
            <param name="module">module.</param>
        </member>
        <member name="M:ScouterApi.Utils.LogUtil.ArgumentValidation(Microsoft.Extensions.Logging.ILogger,System.String,System.String)">
            <summary>
            Method to validate arguments for nullvalue.
            </summary>
            <param name="logger">logger.</param>
            <param name="messages">message.</param>
            <param name="module">module.</param>
        </member>
        <member name="T:Scouter.Common.Resolvers.IValueResolver`3">
            <summary>
            IValueResolver
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TDestination"></typeparam>
            <typeparam name="TDestMember"></typeparam>
        </member>
        <member name="M:Scouter.Common.Resolvers.IValueResolver`3.Resolve(`0,`1,`2,AutoMapper.ResolutionContext)">
            <summary>
            Resolve
            </summary>
            <param name="source"></param>
            <param name="destination"></param>
            <param name="destMember"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
    </members>
</doc>
