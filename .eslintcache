[{"H:\\Chelsea\\football-scouter\\src\\index.tsx":"1","H:\\Chelsea\\football-scouter\\src\\App.tsx":"2","H:\\Chelsea\\football-scouter\\src\\Utils\\TypeConversion.ts":"3","H:\\Chelsea\\football-scouter\\src\\Auth\\AuthProvider.ts":"4","H:\\Chelsea\\football-scouter\\src\\Components\\EventTypeDropDown.tsx":"5","H:\\Chelsea\\football-scouter\\src\\Components\\Dashboard.tsx":"6","H:\\Chelsea\\football-scouter\\src\\reportWebVitals.ts":"7","H:\\Chelsea\\football-scouter\\src\\Components\\EventTable.tsx":"8","H:\\Chelsea\\football-scouter\\src\\Models\\EventModel.tsx":"9","H:\\Chelsea\\football-scouter\\src\\Components\\Card.tsx":"10","H:\\Chelsea\\football-scouter\\src\\Components\\Navigation.tsx":"11","H:\\Chelsea\\football-scouter\\src\\Components\\AddEvent.tsx":"12","H:\\Chelsea\\football-scouter\\src\\Components\\Games.tsx":"13","H:\\Chelsea\\football-scouter\\src\\Components\\AddGame.tsx":"14","H:\\Chelsea\\football-scouter\\src\\Utils\\DateTimeUtil.ts":"15","H:\\Chelsea\\football-scouter\\src\\API\\EventAPI.ts":"16","H:\\Chelsea\\football-scouter\\src\\API\\GameAPI.ts":"17","H:\\Chelsea\\football-scouter\\src\\Components\\GameTable.tsx":"18","H:\\Chelsea\\football-scouter\\src\\API\\ScoreAPI.ts":"19","H:\\Chelsea\\football-scouter\\src\\Components\\StatsTable.tsx":"20","H:\\Chelsea\\football-scouter\\src\\Components\\Stats.tsx":"21","H:\\Chelsea\\football-scouter\\src\\API\\StatsAPI.ts":"22","H:\\Chelsea\\football-scouter\\src\\Components\\Results.tsx":"23","H:\\Chelsea\\football-scouter\\src\\API\\ResultsAPI.ts":"24","H:\\Chelsea\\football-scouter\\src\\Components\\Standings.tsx":"25","H:\\Chelsea\\football-scouter\\src\\Components\\Rules.tsx":"26","H:\\Chelsea\\football-scouter\\src\\API\\MasterAPI.ts":"27","H:\\Chelsea\\football-scouter\\src\\NavBar\\NavBar.Hook.tsx":"28"},{"size":670,"mtime":1606627143973,"results":"29","hashOfConfig":"30"},{"size":4084,"mtime":1613631065320,"results":"31","hashOfConfig":"30"},{"size":693,"mtime":1609286124462,"results":"32","hashOfConfig":"30"},{"size":1557,"mtime":1613614253076,"results":"33","hashOfConfig":"30"},{"size":1010,"mtime":1609285882281,"results":"34","hashOfConfig":"30"},{"size":8100,"mtime":1613615416777,"results":"35","hashOfConfig":"30"},{"size":425,"mtime":1606194194617,"results":"36","hashOfConfig":"30"},{"size":9865,"mtime":1609836086988,"results":"37","hashOfConfig":"30"},{"size":1470,"mtime":1613194484229,"results":"38","hashOfConfig":"30"},{"size":614,"mtime":1608612124618,"results":"39","hashOfConfig":"30"},{"size":3617,"mtime":1613593822672,"results":"40","hashOfConfig":"30"},{"size":3547,"mtime":1610345594432,"results":"41","hashOfConfig":"30"},{"size":4480,"mtime":1613615978072,"results":"42","hashOfConfig":"30"},{"size":3867,"mtime":1610341478535,"results":"43","hashOfConfig":"30"},{"size":1579,"mtime":1609294630058,"results":"44","hashOfConfig":"30"},{"size":3282,"mtime":1613615118701,"results":"45","hashOfConfig":"30"},{"size":1386,"mtime":1613614983963,"results":"46","hashOfConfig":"30"},{"size":7095,"mtime":1613261026466,"results":"47","hashOfConfig":"30"},{"size":881,"mtime":1613616049803,"results":"48","hashOfConfig":"30"},{"size":7635,"mtime":1613598463046,"results":"49","hashOfConfig":"30"},{"size":14861,"mtime":1613617356444,"results":"50","hashOfConfig":"30"},{"size":1518,"mtime":1612248031551,"results":"51","hashOfConfig":"30"},{"size":7795,"mtime":1613617450588,"results":"52","hashOfConfig":"30"},{"size":1665,"mtime":1613615197831,"results":"53","hashOfConfig":"30"},{"size":3981,"mtime":1613617448818,"results":"54","hashOfConfig":"30"},{"size":4285,"mtime":1613616402709,"results":"55","hashOfConfig":"30"},{"size":581,"mtime":1613608953055,"results":"56","hashOfConfig":"30"},{"size":423,"mtime":1606715842972,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1a1l1ta",{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"H:\\Chelsea\\football-scouter\\src\\index.tsx",[],"H:\\Chelsea\\football-scouter\\src\\App.tsx",["115","116","117"],"H:\\Chelsea\\football-scouter\\src\\Utils\\TypeConversion.ts",[],"H:\\Chelsea\\football-scouter\\src\\Auth\\AuthProvider.ts",[],"H:\\Chelsea\\football-scouter\\src\\Components\\EventTypeDropDown.tsx",[],"H:\\Chelsea\\football-scouter\\src\\Components\\Dashboard.tsx",[],"H:\\Chelsea\\football-scouter\\src\\reportWebVitals.ts",[],"H:\\Chelsea\\football-scouter\\src\\Components\\EventTable.tsx",[],"H:\\Chelsea\\football-scouter\\src\\Models\\EventModel.tsx",[],"H:\\Chelsea\\football-scouter\\src\\Components\\Card.tsx",["118","119","120"],"H:\\Chelsea\\football-scouter\\src\\Components\\Navigation.tsx",[],"H:\\Chelsea\\football-scouter\\src\\Components\\AddEvent.tsx",[],"H:\\Chelsea\\football-scouter\\src\\Components\\Games.tsx",[],"H:\\Chelsea\\football-scouter\\src\\Components\\AddGame.tsx",["121"],"H:\\Chelsea\\football-scouter\\src\\Utils\\DateTimeUtil.ts",[],"H:\\Chelsea\\football-scouter\\src\\API\\EventAPI.ts",[],"H:\\Chelsea\\football-scouter\\src\\API\\GameAPI.ts",[],"H:\\Chelsea\\football-scouter\\src\\Components\\GameTable.tsx",[],"H:\\Chelsea\\football-scouter\\src\\API\\ScoreAPI.ts",[],"H:\\Chelsea\\football-scouter\\src\\Components\\StatsTable.tsx",["122","123"],"import React, { useEffect, useState } from 'react'\r\nimport 'office-ui-fabric-react/dist/css/fabric.css'\r\nimport { getTheme } from 'office-ui-fabric-react/lib/Styling';\r\nimport {\r\n    DetailsList,\r\n    DetailsListLayoutMode,\r\n    CheckboxVisibility,\r\n    IDetailsRowProps,\r\n    DetailsRow,\r\n    IDetailsRowStyles,\r\n    SelectionMode,\r\n    IColumn,\r\n    CommandBar,\r\n    IContextualMenuItem,\r\n    ICommandBarStyles,\r\n    Selection,\r\n    Fabric,\r\n  } from '@fluentui/react';\r\nimport { IEventModel } from '../Models/EventModel';\r\nimport IGoldCircleModel from '../Models/GoldCircleModel';\r\n\r\ntype ScoreItemProps = {\r\n  selectionChanged: (scores: string[]) => Promise<void>\r\n  saveStats: (scores: IEventModel[]) => Promise<string>\r\n  goldenCircle: IGoldCircleModel | null\r\n  gameStats: IEventModel[]\r\n}\r\n\r\nconst theme = getTheme();\r\n\r\nconst commandBarStyles: Partial<ICommandBarStyles> = { root: { marginBottom: '40px' } };\r\n\r\nconst StatsTable: React.FC<ScoreItemProps> = (props) => {\r\n    const [columns, setColumns] = useState<IColumn[]>([])\r\n    const [items, setItems] = useState<IEventModel[]>([])\r\n    const [selectedItems, setSelectedItems] = useState<IEventModel[]>([])\r\n    const [stateMessage, setStateMessage] = useState<string>('')\r\n    const [scouters, setScouters] = useState<string[]>([])\r\n    const [loaded, setLoaded] = useState(false)\r\n\r\n    useEffect(() => {\r\n      if ((props.gameStats && props.gameStats.length > 0) || props.gameStats.length !== items.length) {\r\n        setItems(props.gameStats)\r\n        const scouters = items.map(i => i.email.split('@')[0])\r\n        setScouters(scouters)\r\n        setLoaded(true)\r\n     }\r\n    },[props.gameStats, items, props.goldenCircle])\r\n\r\n    useEffect(() => {\r\n      if (loaded) {\r\n        const events = items.flatMap(i => i.events).sort((a,b) => a.eventTime - b.eventTime)\r\n        const uniqueEvents = [...new Set(events.map(e => e.eventTime))]\r\n        let columns: IColumn[] = []\r\n        columns.push({\r\n          key: 'name',\r\n          name: 'Name',\r\n          minWidth: 70,\r\n          maxWidth: 90,\r\n          isResizable: true,\r\n          data: 'string',\r\n          isPadded: true,\r\n        },)\r\n        uniqueEvents.forEach((event, i) => {\r\n          columns.push({\r\n            key: i.toString(),\r\n            name: event.toString(),\r\n            minWidth: 20,\r\n            maxWidth: 30,\r\n            isRowHeader: true,\r\n            isResizable: true,\r\n            data: 'number',\r\n            isPadded: true\r\n          })\r\n        });\r\n        setColumns(columns)\r\n\r\n        // select only golden circle agents, if provided\r\n        if (props.goldenCircle && props.goldenCircle.agentIds.length > 0) {\r\n          selection.setAllSelected(false)\r\n          const selectedIndexes: number[] = []\r\n          const _items: IEventModel[] = selection.getItems() as IEventModel[]\r\n          _items.forEach((item, index) => {\r\n            const isSelected = props.goldenCircle?.agentIds.filter(id => id === item.account)\r\n            if (isSelected && isSelected?.length > 0) {\r\n              selectedIndexes.push(index)\r\n            }\r\n          })\r\n\r\n          selectedIndexes.forEach(index => {\r\n            selection.setIndexSelected(index, true, false)\r\n          })\r\n        }\r\n        else {\r\n          selection.setAllSelected(true)\r\n        }\r\n      }\r\n\r\n    }, [items])\r\n\r\n    const onItemsSelectionChanged  = () => {\r\n      const selectedItems = selection.getSelection()\r\n      setSelectedItems(selectedItems as IEventModel[])\r\n\r\n      console.log(getSelectionDetails())\r\n    }\r\n\r\n    const [selection, setSelection ] = useState<Selection>(new Selection({\r\n      onSelectionChanged: onItemsSelectionChanged,\r\n    }))\r\n\r\n\r\n    const onRenderRow = (props: IDetailsRowProps | undefined): JSX.Element => {\r\n      // Set each other row's background a bit lighter\r\n      const customStyles: Partial<IDetailsRowStyles> = {}\r\n      if (props) {\r\n        const currentItem = props.item as IEventModel\r\n        if (currentItem.isMaster) {\r\n          customStyles.root = { backgroundColor: theme.palette.accent }\r\n        }\r\n        else if (props.itemIndex % 2 === 0) {\r\n          // Every other row renders with a different background color\r\n          customStyles.root = { backgroundColor: theme.palette.themeLighterAlt }\r\n        }\r\n  \r\n        return <DetailsRow {...props} styles={customStyles} />\r\n      }\r\n      return <div />\r\n    }\r\n\r\n    const onRenderItemColumn = (item?: IEventModel | any, index?: number | undefined, column?: IColumn | undefined): JSX.Element => {\r\n      const tableColumn = column as IColumn\r\n      const gameEvent = item as IEventModel\r\n\r\n      switch (tableColumn.key) {\r\n        case 'name':\r\n          return <h2>{scouters[index as number]}</h2>\r\n        default:\r\n          const fieldContent = gameEvent.events.filter(e => e.eventTime === Number.parseFloat(tableColumn.name))\r\n          return <span>{fieldContent.length > 0 ? 'X' : ''}</span>\r\n      }    \r\n    }\r\n    \r\n    const getCommandItems = (): IContextualMenuItem[] => {\r\n      return [\r\n        {\r\n          key: 'recalculate',\r\n          text: 'Recalculate Consensus',\r\n          iconProps: { iconName: 'Refresh' },\r\n          onClick: onRecalculate,\r\n        },\r\n        {\r\n          key: 'saveRow',\r\n          text: 'Save Golden Circle',\r\n          iconProps: { iconName: 'Save' },\r\n          onClick: onSaveEvents,\r\n        },\r\n      ]\r\n    }\r\n\r\n    const onRecalculate = (): boolean | void => {\r\n      if (selection.getSelectedCount() > 0) {\r\n        const selectedItems = (selection.getSelection() as IEventModel[]).flatMap(s => s.account)\r\n        props.selectionChanged(selectedItems).then (() => {\r\n          setStateMessage(`${selection.getSelectedCount()} item(s) were recalculated`)\r\n        })\r\n      } else {\r\n        alert('Please select at least one row to be calculated.')\r\n      }\r\n    }\r\n  \r\n    const onSaveEvents = (): boolean | void => {\r\n      props.saveStats(selectedItems).then (response => {\r\n        setStateMessage(response)\r\n      })\r\n    }\r\n\r\n    const getSelectionDetails = (): string => {\r\n      const selectionCount = selection.getSelectedCount();\r\n  \r\n      switch (selectionCount) {\r\n        case 0:\r\n          return 'No items selected';\r\n        case 1:\r\n          return '1 item selected: ' + (selection.getSelection()[0] as IEventModel).id;\r\n        default:\r\n          return `${selectionCount} items selected`;\r\n      }\r\n    }\r\n\r\n\r\n    const getKey = (item: any, index?: number | undefined): string => {\r\n      return item.account\r\n    }\r\n\r\n    return (\r\n      <div data-is-scrollable={true}>\r\n\r\n        <Fabric className=\"Table\">\r\n          {props.goldenCircle !== null &&\r\n          <CommandBar\r\n            styles={commandBarStyles}\r\n            items={getCommandItems()}\r\n            farItems={[{ key: 'state', text: `${stateMessage ?? ''}` }]}\r\n          />}\r\n\r\n          <DetailsList\r\n              items={items}\r\n              compact={false}\r\n              columns={columns}\r\n              selectionMode={props.goldenCircle !== null ? SelectionMode.multiple : SelectionMode.none}\r\n              selection={selection}\r\n              selectionPreservedOnEmptyClick={true}\r\n              setKey=\"multiple\"\r\n              getKey={getKey}\r\n              layoutMode={DetailsListLayoutMode.justified}\r\n              checkboxVisibility={CheckboxVisibility.onHover}\r\n              isHeaderVisible={true}\r\n              enterModalSelectionOnTouch={true}\r\n              onRenderRow={onRenderRow}\r\n              onRenderItemColumn={onRenderItemColumn}\r\n          />\r\n        </Fabric>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default StatsTable","H:\\Chelsea\\football-scouter\\src\\Components\\Stats.tsx",[],"H:\\Chelsea\\football-scouter\\src\\API\\StatsAPI.ts",[],"H:\\Chelsea\\football-scouter\\src\\Components\\Results.tsx",["124","125"],"H:\\Chelsea\\football-scouter\\src\\API\\ResultsAPI.ts",[],"H:\\Chelsea\\football-scouter\\src\\Components\\Standings.tsx",["126"],"H:\\Chelsea\\football-scouter\\src\\Components\\Rules.tsx",["127"],"H:\\Chelsea\\football-scouter\\src\\API\\MasterAPI.ts",[],"H:\\Chelsea\\football-scouter\\src\\NavBar\\NavBar.Hook.tsx",[],{"ruleId":"128","severity":1,"message":"129","line":31,"column":10,"nodeType":"130","messageId":"131","endLine":31,"endColumn":14},{"ruleId":"128","severity":1,"message":"132","line":31,"column":16,"nodeType":"130","messageId":"131","endLine":31,"endColumn":23},{"ruleId":"133","severity":1,"message":"134","line":79,"column":6,"nodeType":"135","endLine":79,"endColumn":21,"suggestions":"136"},{"ruleId":"128","severity":1,"message":"137","line":1,"column":17,"nodeType":"130","messageId":"131","endLine":1,"endColumn":27},{"ruleId":"128","severity":1,"message":"138","line":1,"column":29,"nodeType":"130","messageId":"131","endLine":1,"endColumn":38},{"ruleId":"128","severity":1,"message":"139","line":1,"column":40,"nodeType":"130","messageId":"131","endLine":1,"endColumn":46},{"ruleId":"133","severity":1,"message":"140","line":54,"column":6,"nodeType":"135","endLine":54,"endColumn":8,"suggestions":"141"},{"ruleId":"133","severity":1,"message":"142","line":99,"column":8,"nodeType":"135","endLine":99,"endColumn":15,"suggestions":"143"},{"ruleId":"128","severity":1,"message":"144","line":108,"column":23,"nodeType":"130","messageId":"131","endLine":108,"endColumn":35},{"ruleId":"128","severity":1,"message":"145","line":6,"column":23,"nodeType":"130","messageId":"131","endLine":6,"endColumn":35},{"ruleId":"128","severity":1,"message":"146","line":18,"column":10,"nodeType":"130","messageId":"131","endLine":18,"endColumn":19},{"ruleId":"128","severity":1,"message":"145","line":6,"column":23,"nodeType":"130","messageId":"131","endLine":6,"endColumn":35},{"ruleId":"128","severity":1,"message":"145","line":6,"column":23,"nodeType":"130","messageId":"131","endLine":6,"endColumn":35},"@typescript-eslint/no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'setUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authenticate'. Either include it or remove the dependency array.","ArrayExpression",["147"],"'useContext' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","React Hook React.useCallback has a missing dependency: 'formData'. Either include it or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["148"],"React Hook useEffect has missing dependencies: 'loaded', 'props.goldenCircle', and 'selection'. Either include them or remove the dependency array.",["149"],"'setSelection' is assigned a value but never used.","'authProvider' is defined but never used.","'AuthProps' is defined but never used.",{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},"Update the dependencies array to be: [authenticate, isInitialized]",{"range":"156","text":"157"},"Update the dependencies array to be: [formData]",{"range":"158","text":"159"},"Update the dependencies array to be: [items, loaded, props.goldenCircle, selection]",{"range":"160","text":"161"},[2835,2850],"[authenticate, isInitialized]",[1543,1545],"[formData]",[3332,3339],"[items, loaded, props.goldenCircle, selection]"]